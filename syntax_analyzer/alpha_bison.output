Rules useless in parser due to conflicts

   66 indexed: %empty


State 17 conflicts: 1 reduce/reduce
State 147 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt program
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | BREAK SEMICOLON
    9     | CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 expr: assignexpr
   14     | expr PLUS expr
   15     | expr MINUS expr
   16     | expr MUL expr
   17     | expr DIV expr
   18     | expr MOD expr
   19     | expr GT expr
   20     | expr GE expr
   21     | expr LT expr
   22     | expr LE expr
   23     | expr EQ expr
   24     | expr NE expr
   25     | expr AND expr
   26     | expr OR expr
   27     | term

   28 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   29     | MINUS expr
   30     | NOT expr
   31     | PLUS_PLUS lvalue
   32     | lvalue PLUS_PLUS
   33     | MINUS_MINUS lvalue
   34     | lvalue MINUS_MINUS
   35     | primary

   36 assignexpr: lvalue ASSIGN expr

   37 primary: lvalue
   38        | call
   39        | objectdef
   40        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   41        | const

   42 lvalue: IDENTIFIER
   43       | LOCAL IDENTIFIER
   44       | DOUBLE_COLON IDENTIFIER
   45       | member

   46 member: lvalue DOT IDENTIFIER
   47       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   48       | call DOT IDENTIFIER
   49       | call LEFT_BRACKET expr RIGHT_BRACKET

   50 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   51     | lvalue callsuffix
   52     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   53 callsuffix: normcall
   54           | methodcall

   55 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   56 methodcall: DOUBLE_DOT IDENTIFIER LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   57 tmp_elist: tmp_elist COMMA expr
   58          | %empty

   59 elist: expr tmp_elist
   60      | %empty

   61 objectdef: LEFT_BRACKET elist RIGHT_BRACKET
   62          | LEFT_BRACKET indexed RIGHT_BRACKET

   63 tmp_indexed: tmp_indexed COMMA indexedelem
   64            | %empty

   65 indexed: indexedelem tmp_indexed
   66        | %empty

   67 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   68 tmp_block: tmp_block stmt
   69          | %empty

   70 $@1: %empty

   71 block: LEFT_BRACE $@1 tmp_block RIGHT_BRACE

   72 tmp_funcdef: IDENTIFIER
   73            | %empty

   74 @2: %empty

   75 $@3: %empty

   76 $@4: %empty

   77 funcdef: FUNCTION tmp_funcdef @2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block

   78 const: CONST_INT
   79      | CONST_REAL
   80      | CONST_STR
   81      | NIL
   82      | BOOL_TRUE
   83      | BOOL_FALSE

   84 tmp_idlist: tmp_idlist COMMA IDENTIFIER
   85           | %empty

   86 idlist: IDENTIFIER tmp_idlist
   87       | %empty

   88 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   89       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt

   90 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

   91 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

   92 returnstmt: RETURN SEMICOLON
   93           | RETURN expr SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 88 89
ELSE (259) 89
WHILE (260) 90
FOR (261) 91
FUNCTION (262) 77
RETURN (263) 92 93
BREAK (264) 8
CONTINUE (265) 9
AND (266) 25
NOT (267) 30
OR (268) 26
LOCAL (269) 43
BOOL_TRUE (270) 82
BOOL_FALSE (271) 83
NIL (272) 81
ASSIGN (273) 36
PLUS (274) 14
MINUS (275) 15 29
MUL (276) 16
DIV (277) 17
MOD (278) 18
PLUS_PLUS (279) 31 32
MINUS_MINUS (280) 33 34
EQ (281) 23
NE (282) 24
GT (283) 19
LT (284) 21
GE (285) 20
LE (286) 22
LEFT_BRACE (287) 67 71
RIGHT_BRACE (288) 67 71
LEFT_BRACKET (289) 47 49 61 62
RIGHT_BRACKET (290) 47 49 61 62
LEFT_PARENTHESIS (291) 28 40 50 52 55 56 77 88 89 90 91
RIGHT_PARENTHESIS (292) 28 40 50 52 55 56 77 88 89 90 91
SEMICOLON (293) 3 8 9 12 91 92 93
COMMA (294) 57 63 84
COLON (295) 67
DOUBLE_COLON (296) 44
DOT (297) 46 48
DOUBLE_DOT (298) 56
CONST_STR (299) 80
IDENTIFIER (300) 42 43 44 46 48 56 72 84 86
CONST_INT (301) 78
CONST_REAL (302) 79
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1 2, on right: 0 1
stmt (51)
    on left: 3 4 5 6 7 8 9 10 11 12, on right: 1 68 88 89 90 91
expr (52)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27, on right:
    3 14 15 16 17 18 19 20 21 22 23 24 25 26 28 29 30 36 47 49 57 59
    67 88 89 90 91 93
term (53)
    on left: 28 29 30 31 32 33 34 35, on right: 27
assignexpr (54)
    on left: 36, on right: 13
primary (55)
    on left: 37 38 39 40 41, on right: 35
lvalue (56)
    on left: 42 43 44 45, on right: 31 32 33 34 36 37 46 47 51
member (57)
    on left: 46 47 48 49, on right: 45
call (58)
    on left: 50 51 52, on right: 38 48 49 50
callsuffix (59)
    on left: 53 54, on right: 51
normcall (60)
    on left: 55, on right: 53
methodcall (61)
    on left: 56, on right: 54
tmp_elist (62)
    on left: 57 58, on right: 57 59
elist (63)
    on left: 59 60, on right: 50 52 55 56 61 91
objectdef (64)
    on left: 61 62, on right: 39
tmp_indexed (65)
    on left: 63 64, on right: 63 65
indexed (66)
    on left: 65 66, on right: 62
indexedelem (67)
    on left: 67, on right: 63 65
tmp_block (68)
    on left: 68 69, on right: 68 71
block (69)
    on left: 71, on right: 10 77
$@1 (70)
    on left: 70, on right: 71
tmp_funcdef (71)
    on left: 72 73, on right: 77
funcdef (72)
    on left: 77, on right: 11 40 52
@2 (73)
    on left: 74, on right: 77
$@3 (74)
    on left: 75, on right: 77
$@4 (75)
    on left: 76, on right: 77
const (76)
    on left: 78 79 80 81 82 83, on right: 41
tmp_idlist (77)
    on left: 84 85, on right: 84 86
idlist (78)
    on left: 86 87, on right: 77
ifstmt (79)
    on left: 88 89, on right: 4
whilestmt (80)
    on left: 90, on right: 5
forstmt (81)
    on left: 91, on right: 6
returnstmt (82)
    on left: 92 93, on right: 7


State 0

    0 $accept: . program $end

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 1

   88 ifstmt: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   89       | IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt

    LEFT_PARENTHESIS  shift, and go to state 42


State 2

   90 whilestmt: WHILE . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 43


State 3

   91 forstmt: FOR . LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 44


State 4

   77 funcdef: FUNCTION . tmp_funcdef @2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block

    IDENTIFIER  shift, and go to state 45

    $default  reduce using rule 73 (tmp_funcdef)

    tmp_funcdef  go to state 46


State 5

   92 returnstmt: RETURN . SEMICOLON
   93           | RETURN . expr SEMICOLON

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 47
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 48
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 6

    8 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 7

    9 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 8

   30 term: NOT . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 51
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 9

   43 lvalue: LOCAL . IDENTIFIER

    IDENTIFIER  shift, and go to state 52


State 10

   82 const: BOOL_TRUE .

    $default  reduce using rule 82 (const)


State 11

   83 const: BOOL_FALSE .

    $default  reduce using rule 83 (const)


State 12

   81 const: NIL .

    $default  reduce using rule 81 (const)


State 13

   29 term: MINUS . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 53
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 14

   31 term: PLUS_PLUS . lvalue

    LOCAL             shift, and go to state 9
    LEFT_PARENTHESIS  shift, and go to state 54
    DOUBLE_COLON      shift, and go to state 20
    IDENTIFIER        shift, and go to state 22

    lvalue  go to state 55
    member  go to state 32
    call    go to state 56


State 15

   33 term: MINUS_MINUS . lvalue

    LOCAL             shift, and go to state 9
    LEFT_PARENTHESIS  shift, and go to state 54
    DOUBLE_COLON      shift, and go to state 20
    IDENTIFIER        shift, and go to state 22

    lvalue  go to state 57
    member  go to state 32
    call    go to state 56


State 16

   71 block: LEFT_BRACE . $@1 tmp_block RIGHT_BRACE

    $default  reduce using rule 70 ($@1)

    $@1  go to state 58


State 17

   61 objectdef: LEFT_BRACKET . elist RIGHT_BRACKET
   62          | LEFT_BRACKET . indexed RIGHT_BRACKET

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACE        shift, and go to state 59
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    RIGHT_BRACKET  reduce using rule 60 (elist)
    RIGHT_BRACKET  [reduce using rule 66 (indexed)]
    $default       reduce using rule 60 (elist)

    expr         go to state 60
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 61
    objectdef    go to state 34
    indexed      go to state 62
    indexedelem  go to state 63
    const        go to state 37


State 18

   28 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   40 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   52 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION          shift, and go to state 4
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 64
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 65
    const       go to state 37


State 19

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 20

   44 lvalue: DOUBLE_COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 66


State 21

   80 const: CONST_STR .

    $default  reduce using rule 80 (const)


State 22

   42 lvalue: IDENTIFIER .

    $default  reduce using rule 42 (lvalue)


State 23

   78 const: CONST_INT .

    $default  reduce using rule 78 (const)


State 24

   79 const: CONST_REAL .

    $default  reduce using rule 79 (const)


State 25

    0 $accept: program . $end

    $end  shift, and go to state 67


State 26

    1 program: stmt . program

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 68
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 27

    3 stmt: expr . SEMICOLON
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND        shift, and go to state 69
    OR         shift, and go to state 70
    PLUS       shift, and go to state 71
    MINUS      shift, and go to state 72
    MUL        shift, and go to state 73
    DIV        shift, and go to state 74
    MOD        shift, and go to state 75
    EQ         shift, and go to state 76
    NE         shift, and go to state 77
    GT         shift, and go to state 78
    LT         shift, and go to state 79
    GE         shift, and go to state 80
    LE         shift, and go to state 81
    SEMICOLON  shift, and go to state 82


State 28

   27 expr: term .

    $default  reduce using rule 27 (expr)


State 29

   13 expr: assignexpr .

    $default  reduce using rule 13 (expr)


State 30

   35 term: primary .

    $default  reduce using rule 35 (term)


State 31

   32 term: lvalue . PLUS_PLUS
   34     | lvalue . MINUS_MINUS
   36 assignexpr: lvalue . ASSIGN expr
   37 primary: lvalue .
   46 member: lvalue . DOT IDENTIFIER
   47       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: lvalue . callsuffix

    ASSIGN            shift, and go to state 83
    PLUS_PLUS         shift, and go to state 84
    MINUS_MINUS       shift, and go to state 85
    LEFT_BRACKET      shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89

    $default  reduce using rule 37 (primary)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 32

   45 lvalue: member .

    $default  reduce using rule 45 (lvalue)


State 33

   38 primary: call .
   48 member: call . DOT IDENTIFIER
   49       | call . LEFT_BRACKET expr RIGHT_BRACKET
   50 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 93
    LEFT_PARENTHESIS  shift, and go to state 94
    DOT               shift, and go to state 95

    $default  reduce using rule 38 (primary)


State 34

   39 primary: objectdef .

    $default  reduce using rule 39 (primary)


State 35

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 36

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 37

   41 primary: const .

    $default  reduce using rule 41 (primary)


State 38

    4 stmt: ifstmt .

    $default  reduce using rule 4 (stmt)


State 39

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


State 40

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


State 41

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


State 42

   88 ifstmt: IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt
   89       | IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt ELSE stmt

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 96
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 43

   90 whilestmt: WHILE LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 97
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 44

   91 forstmt: FOR LEFT_PARENTHESIS . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 98
    objectdef   go to state 34
    const       go to state 37


State 45

   72 tmp_funcdef: IDENTIFIER .

    $default  reduce using rule 72 (tmp_funcdef)


State 46

   77 funcdef: FUNCTION tmp_funcdef . @2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block

    $default  reduce using rule 74 (@2)

    @2  go to state 99


State 47

   92 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 92 (returnstmt)


State 48

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   93 returnstmt: RETURN expr . SEMICOLON

    AND        shift, and go to state 69
    OR         shift, and go to state 70
    PLUS       shift, and go to state 71
    MINUS      shift, and go to state 72
    MUL        shift, and go to state 73
    DIV        shift, and go to state 74
    MOD        shift, and go to state 75
    EQ         shift, and go to state 76
    NE         shift, and go to state 77
    GT         shift, and go to state 78
    LT         shift, and go to state 79
    GE         shift, and go to state 80
    LE         shift, and go to state 81
    SEMICOLON  shift, and go to state 100


State 49

    8 stmt: BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 50

    9 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 51

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   30 term: NOT expr .

    $default  reduce using rule 30 (term)


State 52

   43 lvalue: LOCAL IDENTIFIER .

    $default  reduce using rule 43 (lvalue)


State 53

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   29 term: MINUS expr .

    $default  reduce using rule 29 (term)


State 54

   52 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 4

    funcdef  go to state 101


State 55

   31 term: PLUS_PLUS lvalue .
   46 member: lvalue . DOT IDENTIFIER
   47       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89

    $default  reduce using rule 31 (term)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 56

   48 member: call . DOT IDENTIFIER
   49       | call . LEFT_BRACKET expr RIGHT_BRACKET
   50 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 93
    LEFT_PARENTHESIS  shift, and go to state 94
    DOT               shift, and go to state 95


State 57

   33 term: MINUS_MINUS lvalue .
   46 member: lvalue . DOT IDENTIFIER
   47       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89

    $default  reduce using rule 33 (term)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 58

   71 block: LEFT_BRACE $@1 . tmp_block RIGHT_BRACE

    $default  reduce using rule 69 (tmp_block)

    tmp_block  go to state 102


State 59

   67 indexedelem: LEFT_BRACE . expr COLON expr RIGHT_BRACE

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 103
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 60

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   59 elist: expr . tmp_elist

    AND    shift, and go to state 69
    OR     shift, and go to state 70
    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75
    EQ     shift, and go to state 76
    NE     shift, and go to state 77
    GT     shift, and go to state 78
    LT     shift, and go to state 79
    GE     shift, and go to state 80
    LE     shift, and go to state 81

    $default  reduce using rule 58 (tmp_elist)

    tmp_elist  go to state 104


State 61

   61 objectdef: LEFT_BRACKET elist . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 105


State 62

   62 objectdef: LEFT_BRACKET indexed . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 106


State 63

   65 indexed: indexedelem . tmp_indexed

    $default  reduce using rule 64 (tmp_indexed)

    tmp_indexed  go to state 107


State 64

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   28 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 69
    OR                 shift, and go to state 70
    PLUS               shift, and go to state 71
    MINUS              shift, and go to state 72
    MUL                shift, and go to state 73
    DIV                shift, and go to state 74
    MOD                shift, and go to state 75
    EQ                 shift, and go to state 76
    NE                 shift, and go to state 77
    GT                 shift, and go to state 78
    LT                 shift, and go to state 79
    GE                 shift, and go to state 80
    LE                 shift, and go to state 81
    RIGHT_PARENTHESIS  shift, and go to state 108


State 65

   40 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   52 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 109


State 66

   44 lvalue: DOUBLE_COLON IDENTIFIER .

    $default  reduce using rule 44 (lvalue)


State 67

    0 $accept: program $end .

    $default  accept


State 68

    1 program: stmt program .

    $default  reduce using rule 1 (program)


State 69

   25 expr: expr AND . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 110
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 70

   26 expr: expr OR . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 111
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 71

   14 expr: expr PLUS . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 112
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 72

   15 expr: expr MINUS . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 113
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 73

   16 expr: expr MUL . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 114
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 74

   17 expr: expr DIV . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 115
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 75

   18 expr: expr MOD . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 116
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 76

   23 expr: expr EQ . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 117
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 77

   24 expr: expr NE . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 118
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 78

   19 expr: expr GT . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 119
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 79

   21 expr: expr LT . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 120
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 80

   20 expr: expr GE . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 121
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 81

   22 expr: expr LE . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 82

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 83

   36 assignexpr: lvalue ASSIGN . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 84

   32 term: lvalue PLUS_PLUS .

    $default  reduce using rule 32 (term)


State 85

   34 term: lvalue MINUS_MINUS .

    $default  reduce using rule 34 (term)


State 86

   47 member: lvalue LEFT_BRACKET . expr RIGHT_BRACKET

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 87

   55 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 125
    objectdef   go to state 34
    const       go to state 37


State 88

   46 member: lvalue DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 126


State 89

   56 methodcall: DOUBLE_DOT . IDENTIFIER LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    IDENTIFIER  shift, and go to state 127


State 90

   51 call: lvalue callsuffix .

    $default  reduce using rule 51 (call)


State 91

   53 callsuffix: normcall .

    $default  reduce using rule 53 (callsuffix)


State 92

   54 callsuffix: methodcall .

    $default  reduce using rule 54 (callsuffix)


State 93

   49 member: call LEFT_BRACKET . expr RIGHT_BRACKET

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 94

   50 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 129
    objectdef   go to state 34
    const       go to state 37


State 95

   48 member: call DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 130


State 96

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   88 ifstmt: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt
   89       | IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt ELSE stmt

    AND                shift, and go to state 69
    OR                 shift, and go to state 70
    PLUS               shift, and go to state 71
    MINUS              shift, and go to state 72
    MUL                shift, and go to state 73
    DIV                shift, and go to state 74
    MOD                shift, and go to state 75
    EQ                 shift, and go to state 76
    NE                 shift, and go to state 77
    GT                 shift, and go to state 78
    LT                 shift, and go to state 79
    GE                 shift, and go to state 80
    LE                 shift, and go to state 81
    RIGHT_PARENTHESIS  shift, and go to state 131


State 97

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   90 whilestmt: WHILE LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt

    AND                shift, and go to state 69
    OR                 shift, and go to state 70
    PLUS               shift, and go to state 71
    MINUS              shift, and go to state 72
    MUL                shift, and go to state 73
    DIV                shift, and go to state 74
    MOD                shift, and go to state 75
    EQ                 shift, and go to state 76
    NE                 shift, and go to state 77
    GT                 shift, and go to state 78
    LT                 shift, and go to state 79
    GE                 shift, and go to state 80
    LE                 shift, and go to state 81
    RIGHT_PARENTHESIS  shift, and go to state 132


State 98

   91 forstmt: FOR LEFT_PARENTHESIS elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    SEMICOLON  shift, and go to state 133


State 99

   77 funcdef: FUNCTION tmp_funcdef @2 . LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block

    LEFT_PARENTHESIS  shift, and go to state 134


State 100

   93 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 93 (returnstmt)


State 101

   52 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 135


State 102

   68 tmp_block: tmp_block . stmt
   71 block: LEFT_BRACE $@1 tmp_block . RIGHT_BRACE

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    RIGHT_BRACE       shift, and go to state 136
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    stmt        go to state 137
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 103

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   67 indexedelem: LEFT_BRACE expr . COLON expr RIGHT_BRACE

    AND    shift, and go to state 69
    OR     shift, and go to state 70
    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75
    EQ     shift, and go to state 76
    NE     shift, and go to state 77
    GT     shift, and go to state 78
    LT     shift, and go to state 79
    GE     shift, and go to state 80
    LE     shift, and go to state 81
    COLON  shift, and go to state 138


State 104

   57 tmp_elist: tmp_elist . COMMA expr
   59 elist: expr tmp_elist .

    COMMA  shift, and go to state 139

    $default  reduce using rule 59 (elist)


State 105

   61 objectdef: LEFT_BRACKET elist RIGHT_BRACKET .

    $default  reduce using rule 61 (objectdef)


State 106

   62 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET .

    $default  reduce using rule 62 (objectdef)


State 107

   63 tmp_indexed: tmp_indexed . COMMA indexedelem
   65 indexed: indexedelem tmp_indexed .

    COMMA  shift, and go to state 140

    $default  reduce using rule 65 (indexed)


State 108

   28 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 28 (term)


State 109

   40 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   52 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 141

    $default  reduce using rule 40 (primary)


State 110

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   25     | expr AND expr .
   26     | expr . OR expr

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75
    EQ     shift, and go to state 76
    NE     shift, and go to state 77
    GT     shift, and go to state 78
    LT     shift, and go to state 79
    GE     shift, and go to state 80
    LE     shift, and go to state 81

    $default  reduce using rule 25 (expr)


State 111

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   26     | expr OR expr .

    AND    shift, and go to state 69
    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75
    EQ     shift, and go to state 76
    NE     shift, and go to state 77
    GT     shift, and go to state 78
    LT     shift, and go to state 79
    GE     shift, and go to state 80
    LE     shift, and go to state 81

    $default  reduce using rule 26 (expr)


State 112

   14 expr: expr . PLUS expr
   14     | expr PLUS expr .
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74
    MOD  shift, and go to state 75

    $default  reduce using rule 14 (expr)


State 113

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74
    MOD  shift, and go to state 75

    $default  reduce using rule 15 (expr)


State 114

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   16     | expr MUL expr .
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 16 (expr)


State 115

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   17     | expr DIV expr .
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 116

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   18     | expr MOD expr .
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 117

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   23     | expr EQ expr .
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75
    GT     shift, and go to state 78
    LT     shift, and go to state 79
    GE     shift, and go to state 80
    LE     shift, and go to state 81

    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 118

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   24     | expr NE expr .
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75
    GT     shift, and go to state 78
    LT     shift, and go to state 79
    GE     shift, and go to state 80
    LE     shift, and go to state 81

    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 119

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   19     | expr GT expr .
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75

    GT  error (nonassociative)
    LT  error (nonassociative)
    GE  error (nonassociative)
    LE  error (nonassociative)

    $default  reduce using rule 19 (expr)


State 120

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   21     | expr LT expr .
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75

    GT  error (nonassociative)
    LT  error (nonassociative)
    GE  error (nonassociative)
    LE  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 121

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   20     | expr GE expr .
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75

    GT  error (nonassociative)
    LT  error (nonassociative)
    GE  error (nonassociative)
    LE  error (nonassociative)

    $default  reduce using rule 20 (expr)


State 122

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   22     | expr LE expr .
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75

    GT  error (nonassociative)
    LT  error (nonassociative)
    GE  error (nonassociative)
    LE  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 123

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   36 assignexpr: lvalue ASSIGN expr .

    AND    shift, and go to state 69
    OR     shift, and go to state 70
    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75
    EQ     shift, and go to state 76
    NE     shift, and go to state 77
    GT     shift, and go to state 78
    LT     shift, and go to state 79
    GE     shift, and go to state 80
    LE     shift, and go to state 81

    $default  reduce using rule 36 (assignexpr)


State 124

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   47 member: lvalue LEFT_BRACKET expr . RIGHT_BRACKET

    AND            shift, and go to state 69
    OR             shift, and go to state 70
    PLUS           shift, and go to state 71
    MINUS          shift, and go to state 72
    MUL            shift, and go to state 73
    DIV            shift, and go to state 74
    MOD            shift, and go to state 75
    EQ             shift, and go to state 76
    NE             shift, and go to state 77
    GT             shift, and go to state 78
    LT             shift, and go to state 79
    GE             shift, and go to state 80
    LE             shift, and go to state 81
    RIGHT_BRACKET  shift, and go to state 142


State 125

   55 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 143


State 126

   46 member: lvalue DOT IDENTIFIER .

    $default  reduce using rule 46 (member)


State 127

   56 methodcall: DOUBLE_DOT IDENTIFIER . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 144


State 128

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   49 member: call LEFT_BRACKET expr . RIGHT_BRACKET

    AND            shift, and go to state 69
    OR             shift, and go to state 70
    PLUS           shift, and go to state 71
    MINUS          shift, and go to state 72
    MUL            shift, and go to state 73
    DIV            shift, and go to state 74
    MOD            shift, and go to state 75
    EQ             shift, and go to state 76
    NE             shift, and go to state 77
    GT             shift, and go to state 78
    LT             shift, and go to state 79
    GE             shift, and go to state 80
    LE             shift, and go to state 81
    RIGHT_BRACKET  shift, and go to state 145


State 129

   50 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 146


State 130

   48 member: call DOT IDENTIFIER .

    $default  reduce using rule 48 (member)


State 131

   88 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt
   89       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt ELSE stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    stmt        go to state 147
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 132

   90 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    stmt        go to state 148
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 133

   91 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 149
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 134

   77 funcdef: FUNCTION tmp_funcdef @2 LEFT_PARENTHESIS . $@3 idlist RIGHT_PARENTHESIS $@4 block

    $default  reduce using rule 75 ($@3)

    $@3  go to state 150


State 135

   52 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 141


State 136

   71 block: LEFT_BRACE $@1 tmp_block RIGHT_BRACE .

    $default  reduce using rule 71 (block)


State 137

   68 tmp_block: tmp_block stmt .

    $default  reduce using rule 68 (tmp_block)


State 138

   67 indexedelem: LEFT_BRACE expr COLON . expr RIGHT_BRACE

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 151
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 139

   57 tmp_elist: tmp_elist COMMA . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    expr        go to state 152
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 140

   63 tmp_indexed: tmp_indexed COMMA . indexedelem

    LEFT_BRACE  shift, and go to state 59

    indexedelem  go to state 153


State 141

   52 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 154
    objectdef   go to state 34
    const       go to state 37


State 142

   47 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 47 (member)


State 143

   55 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 55 (normcall)


State 144

   56 methodcall: DOUBLE_DOT IDENTIFIER LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 155
    objectdef   go to state 34
    const       go to state 37


State 145

   49 member: call LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 49 (member)


State 146

   50 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 50 (call)


State 147

   88 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .
   89       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt . ELSE stmt

    ELSE  shift, and go to state 156

    ELSE      [reduce using rule 88 (ifstmt)]
    $default  reduce using rule 88 (ifstmt)


State 148

   90 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 90 (whilestmt)


State 149

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   91 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTHESIS stmt

    AND        shift, and go to state 69
    OR         shift, and go to state 70
    PLUS       shift, and go to state 71
    MINUS      shift, and go to state 72
    MUL        shift, and go to state 73
    DIV        shift, and go to state 74
    MOD        shift, and go to state 75
    EQ         shift, and go to state 76
    NE         shift, and go to state 77
    GT         shift, and go to state 78
    LT         shift, and go to state 79
    GE         shift, and go to state 80
    LE         shift, and go to state 81
    SEMICOLON  shift, and go to state 157


State 150

   77 funcdef: FUNCTION tmp_funcdef @2 LEFT_PARENTHESIS $@3 . idlist RIGHT_PARENTHESIS $@4 block

    IDENTIFIER  shift, and go to state 158

    $default  reduce using rule 87 (idlist)

    idlist  go to state 159


State 151

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   67 indexedelem: LEFT_BRACE expr COLON expr . RIGHT_BRACE

    AND          shift, and go to state 69
    OR           shift, and go to state 70
    PLUS         shift, and go to state 71
    MINUS        shift, and go to state 72
    MUL          shift, and go to state 73
    DIV          shift, and go to state 74
    MOD          shift, and go to state 75
    EQ           shift, and go to state 76
    NE           shift, and go to state 77
    GT           shift, and go to state 78
    LT           shift, and go to state 79
    GE           shift, and go to state 80
    LE           shift, and go to state 81
    RIGHT_BRACE  shift, and go to state 160


State 152

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GT expr
   20     | expr . GE expr
   21     | expr . LT expr
   22     | expr . LE expr
   23     | expr . EQ expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   57 tmp_elist: tmp_elist COMMA expr .

    AND    shift, and go to state 69
    OR     shift, and go to state 70
    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75
    EQ     shift, and go to state 76
    NE     shift, and go to state 77
    GT     shift, and go to state 78
    LT     shift, and go to state 79
    GE     shift, and go to state 80
    LE     shift, and go to state 81

    $default  reduce using rule 57 (tmp_elist)


State 153

   63 tmp_indexed: tmp_indexed COMMA indexedelem .

    $default  reduce using rule 63 (tmp_indexed)


State 154

   52 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 161


State 155

   56 methodcall: DOUBLE_DOT IDENTIFIER LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 162


State 156

   89 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE . stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    stmt        go to state 163
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 157

   91 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTHESIS stmt

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 164
    objectdef   go to state 34
    const       go to state 37


State 158

   86 idlist: IDENTIFIER . tmp_idlist

    $default  reduce using rule 85 (tmp_idlist)

    tmp_idlist  go to state 165


State 159

   77 funcdef: FUNCTION tmp_funcdef @2 LEFT_PARENTHESIS $@3 idlist . RIGHT_PARENTHESIS $@4 block

    RIGHT_PARENTHESIS  shift, and go to state 166


State 160

   67 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE .

    $default  reduce using rule 67 (indexedelem)


State 161

   52 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 52 (call)


State 162

   56 methodcall: DOUBLE_DOT IDENTIFIER LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 56 (methodcall)


State 163

   89 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt .

    $default  reduce using rule 89 (ifstmt)


State 164

   91 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 167


State 165

   84 tmp_idlist: tmp_idlist . COMMA IDENTIFIER
   86 idlist: IDENTIFIER tmp_idlist .

    COMMA  shift, and go to state 168

    $default  reduce using rule 86 (idlist)


State 166

   77 funcdef: FUNCTION tmp_funcdef @2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS . $@4 block

    $default  reduce using rule 76 ($@4)

    $@4  go to state 169


State 167

   91 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS . stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    BOOL_TRUE         shift, and go to state 10
    BOOL_FALSE        shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    CONST_STR         shift, and go to state 21
    IDENTIFIER        shift, and go to state 22
    CONST_INT         shift, and go to state 23
    CONST_REAL        shift, and go to state 24

    stmt        go to state 170
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 168

   84 tmp_idlist: tmp_idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 171


State 169

   77 funcdef: FUNCTION tmp_funcdef @2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 . block

    LEFT_BRACE  shift, and go to state 16

    block  go to state 172


State 170

   91 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 91 (forstmt)


State 171

   84 tmp_idlist: tmp_idlist COMMA IDENTIFIER .

    $default  reduce using rule 84 (tmp_idlist)


State 172

   77 funcdef: FUNCTION tmp_funcdef @2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block .

    $default  reduce using rule 77 (funcdef)
